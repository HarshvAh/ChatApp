{"ast":null,"code":"var _jsxFileName = \"/home/jagdish/Desktop/marshal/src/components/ChatFeed.jsx\";\nimport MessageForm from './MessageForm';\nimport MyMessage from './MyMessage';\nimport TheirMessage from './TheirMessage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChatFeed = props => {\n  const {\n    chats,\n    activeChat,\n    userName,\n    messages\n  } = props;\n  const chat = chats && chats[activeChat];\n  console.log(chat, userName, messages);\n\n  const renderMessages = () => {\n    const keys = Object.keys(messages);\n    return keys.map((key, index) => {\n      const message = messages[key];\n      const lastMessageKey = index === 0 ? null : keys[index - 1];\n      const isMyMessage = userName === message.sender.username;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '100%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-block\",\n          children: isMyMessage ? /*#__PURE__*/_jsxDEV(MyMessage, {\n            message: message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 10\n          }, this) : /*#__PURE__*/_jsxDEV(TheirMessage, {\n            message: message,\n            lastMessage: messages[lastMessageKey]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 10\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"read-receipts\",\n          style: {\n            marginRight: isMyMessage ? '18px' : '0px',\n            marginLeft: isMyMessage ? '0px' : '68px'\n          },\n          children: \"read-receipts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 6\n        }, this)]\n      }, 'msg_$(index)', true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 5\n      }, this);\n    });\n  };\n\n  renderMessages();\n  if (!chat) return 'Loading...';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-feed\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-title-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-title\",\n        children: chat === null || chat === void 0 ? void 0 : chat.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-subtitle\",\n        children: chat.people.map(person => '$(person.person.username)')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 4\n    }, this), renderMessages(), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: '100px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-form-container\",\n      children: /*#__PURE__*/_jsxDEV(MessageForm, { ...props,\n        chatId: activeChat\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 3\n  }, this);\n};\n\n_c = ChatFeed;\nexport default ChatFeed;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatFeed\");","map":{"version":3,"sources":["/home/jagdish/Desktop/marshal/src/components/ChatFeed.jsx"],"names":["MessageForm","MyMessage","TheirMessage","ChatFeed","props","chats","activeChat","userName","messages","chat","console","log","renderMessages","keys","Object","map","key","index","message","lastMessageKey","isMyMessage","sender","username","width","marginRight","marginLeft","title","people","person","height"],"mappings":";AAAA,OAAOA,WAAP,MAAwB,eAAxB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAC3B,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,UAAT;AAAqBC,IAAAA,QAArB;AAA+BC,IAAAA;AAA/B,MAA4CJ,KAAlD;AACA,QAAMK,IAAI,GAAGJ,KAAK,IAAIA,KAAK,CAACC,UAAD,CAA3B;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ,EAAiBF,QAAjB,EAA0BC,QAA1B;;AACA,QAAMI,cAAc,GAAE,MAAM;AAC3B,UAAMC,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAYL,QAAZ,CAAb;AACA,WAAOK,IAAI,CAACE,GAAL,CAAS,CAACC,GAAD,EAAKC,KAAL,KAAa;AAC5B,YAAMC,OAAO,GAAGV,QAAQ,CAACQ,GAAD,CAAxB;AACA,YAAMG,cAAc,GAAGF,KAAK,KAAK,CAAV,GAAc,IAAd,GAAqBJ,IAAI,CAACI,KAAK,GAAC,CAAP,CAAhD;AACA,YAAMG,WAAW,GAAGb,QAAQ,KAAKW,OAAO,CAACG,MAAR,CAAeC,QAAhD;AAEA,0BACC;AAA0B,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAE;AAAT,SAAjC;AAAA,gCACC;AAAK,UAAA,SAAS,EAAC,eAAf;AAAA,oBAEEH,WAAW,gBACT,QAAC,SAAD;AAAW,YAAA,OAAO,EAAEF;AAApB;AAAA;AAAA;AAAA;AAAA,kBADS,gBAET,QAAC,YAAD;AAAc,YAAA,OAAO,EAAEA,OAAvB;AAAgC,YAAA,WAAW,EAAEV,QAAQ,CAACW,cAAD;AAArD;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,gBADD,eAQC;AAAK,UAAA,SAAS,EAAC,eAAf;AAA+B,UAAA,KAAK,EAAE;AAAEK,YAAAA,WAAW,EAAEJ,WAAW,GAAG,MAAH,GAAY,KAAtC;AAA6CK,YAAAA,UAAU,EAAEL,WAAW,GAAG,KAAH,GAAW;AAA/E,WAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARD;AAAA,SAAU,cAAV;AAAA;AAAA;AAAA;AAAA,cADD;AAcA,KAnBM,CAAP;AAoBA,GAtBD;;AAwBAR,EAAAA,cAAc;AAEd,MAAG,CAACH,IAAJ,EAAU,OAAO,YAAP;AAEV,sBACC;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACC;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA,8BACC;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,kBAA6BA,IAA7B,aAA6BA,IAA7B,uBAA6BA,IAAI,CAAEiB;AAAnC;AAAA;AAAA;AAAA;AAAA,cADD,eAEC;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,kBACEjB,IAAI,CAACkB,MAAL,CAAYZ,GAAZ,CAAiBa,MAAD,IAAW,2BAA3B;AADF;AAAA;AAAA;AAAA;AAAA,cAFD;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,EAOEhB,cAAc,EAPhB,eAQC;AAAK,MAAA,KAAK,EAAE;AAAEiB,QAAAA,MAAM,EAAE;AAAV;AAAZ;AAAA;AAAA;AAAA;AAAA,YARD,eASC;AAAK,MAAA,SAAS,EAAC,wBAAf;AAAA,6BACC,QAAC,WAAD,OAAiBzB,KAAjB;AAAwB,QAAA,MAAM,EAAEE;AAAhC;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,YATD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAgBA,CAhDD;;KAAMH,Q;AAkDN,eAAeA,QAAf","sourcesContent":["import MessageForm from './MessageForm' ;\nimport MyMessage from './MyMessage' ;\nimport TheirMessage from './TheirMessage' ;\n\nconst ChatFeed = (props) => {\n\tconst { chats, activeChat, userName, messages } = props ;\n\tconst chat = chats && chats[activeChat];\n\tconsole.log(chat,userName,messages) ;\n\tconst renderMessages =() => {\n\t\tconst keys = Object.keys(messages) ;\n\t\treturn keys.map((key,index)=>{\n\t\t\tconst message = messages[key] ;\n\t\t\tconst lastMessageKey = index === 0 ? null : keys[index-1] ;\n\t\t\tconst isMyMessage = userName === message.sender.username ;\n\n\t\t\treturn(\n\t\t\t\t<div key={'msg_$(index)'} style={{ width: '100%'}}>\n\t\t\t\t\t<div className=\"message-block\">\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tisMyMessage \n\t\t\t\t\t\t\t? <MyMessage message={message}/>\n\t\t\t\t\t\t\t: <TheirMessage message={message} lastMessage={messages[lastMessageKey]} />\n\t\t\t\t\t\t}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"read-receipts\" style={{ marginRight: isMyMessage ? '18px' : '0px', marginLeft: isMyMessage ? '0px' : '68px' }}>\n\t\t\t\t\t\tread-receipts\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t);\n\t\t})\n\t}\n\n\trenderMessages()\n\n\tif(!chat) return 'Loading...' ;\n\n\treturn (\n\t\t<div className=\"chat-feed\">\n\t\t\t<div className=\"chat-title-container\">\n\t\t\t\t<div className=\"chat-title\">{chat?.title}</div>\n\t\t\t\t<div className=\"chat-subtitle\">\n\t\t\t\t\t{chat.people.map((person)=> '$(person.person.username)')}\n\t\t\t\t</div>\n\t\t\t</div>\t\n\t\t\t{renderMessages()}\n\t\t\t<div style={{ height: '100px' }} />\n\t\t\t<div className=\"message-form-container\">\n\t\t\t\t<MessageForm {...props} chatId={activeChat} />\n\t\t\t</div>\t\t\n\t\t</div>\n\n\t)\n}\n\nexport default ChatFeed"]},"metadata":{},"sourceType":"module"}